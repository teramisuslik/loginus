import { Controller, Get, Post, Body, UseGuards } from '@nestjs/common';
import { ApiTags, ApiOperation, ApiResponse, ApiBearerAuth } from '@nestjs/swagger';
import { SettingsService } from './settings.service';
import { JwtAuthGuard } from '../auth/guards/jwt-auth.guard';
import { RequirePermissions } from '../auth/decorators/permissions.decorator';
import { CurrentUser } from '../auth/decorators/current-user.decorator';

@ApiTags('settings')
@UseGuards(JwtAuthGuard)
@ApiBearerAuth()
@Controller('settings')
export class SettingsController {
  constructor(private readonly settingsService: SettingsService) {}

  @Get()
  @RequirePermissions('settings.read')
  @ApiOperation({ summary: '–ü–æ–ª—É—á–µ–Ω–∏–µ –≤—Å–µ—Ö –Ω–∞—Å—Ç—Ä–æ–µ–∫ —Å–∏—Å—Ç–µ–º—ã' })
  @ApiResponse({ status: 200, description: '–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–æ–ª—É—á–µ–Ω—ã' })
  async getAllSettings() {
    return this.settingsService.getAllSettings();
  }

  @Get('default-user-role')
  @RequirePermissions('settings.read')
  @ApiOperation({ summary: '–ü–æ–ª—É—á–µ–Ω–∏–µ —Ä–æ–ª–∏ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é –¥–ª—è –Ω–æ–≤—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π' })
  @ApiResponse({ status: 200, description: '–†–æ–ª—å –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é –ø–æ–ª—É—á–µ–Ω–∞' })
  async getDefaultUserRole() {
    const role = await this.settingsService.getDefaultUserRole();
    return { defaultUserRole: role };
  }

  @Post('default-user-role')
  @RequirePermissions('settings.update')
  @ApiOperation({ summary: '–£—Å—Ç–∞–Ω–æ–≤–∫–∞ —Ä–æ–ª–∏ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é –¥–ª—è –Ω–æ–≤—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π' })
  @ApiResponse({ status: 200, description: '–†–æ–ª—å –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞' })
  async setDefaultUserRole(
    @Body() body: { roleName: string },
    @CurrentUser() user: any
  ) {
    await this.settingsService.setDefaultUserRole(body.roleName);
    console.log(`üîß Super admin ${user.email} —É—Å—Ç–∞–Ω–æ–≤–∏–ª —Ä–æ–ª—å –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é: ${body.roleName}`);
    return { message: '–†–æ–ª—å –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é —É—Å–ø–µ—à–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞', defaultUserRole: body.roleName };
  }
}